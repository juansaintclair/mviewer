{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { observer } from \"mobx-react-lite\";\nimport { Header, Screen, Text, AutoImage as Image, GradientBackground } from \"../../components\";\nimport { color, spacing } from \"../../theme\";\nimport { useStores } from \"../../models\";\nvar FULL = {\n  flex: 1\n};\nvar CONTAINER = {\n  backgroundColor: color.transparent\n};\nvar HEADER = {\n  paddingBottom: spacing[5] - 1,\n  paddingHorizontal: spacing[4],\n  paddingTop: spacing[3]\n};\nvar HEADER_TITLE = {\n  fontSize: 12,\n  fontWeight: \"bold\",\n  letterSpacing: 1.5,\n  lineHeight: 15,\n  textAlign: \"center\"\n};\nvar LIST_CONTAINER = {\n  alignItems: \"center\",\n  flexDirection: \"row\",\n  padding: 10\n};\nvar IMAGE = {\n  borderRadius: 35,\n  height: 65,\n  width: 65\n};\nvar LIST_TEXT = {\n  marginLeft: 10\n};\nvar FLAT_LIST = {\n  paddingHorizontal: spacing[4]\n};\nexport var DemoListScreen = observer(function (_ref) {\n  var navigation = _ref.navigation;\n\n  var goBack = function goBack() {\n    return navigation.goBack();\n  };\n\n  var _useStores = useStores(),\n      characterStore = _useStores.characterStore;\n\n  var characters = characterStore.characters;\n  useEffect(function () {\n    function fetchData() {\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(characterStore.getCharacters());\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, []);\n  return React.createElement(View, {\n    testID: \"DemoListScreen\",\n    style: FULL\n  }, React.createElement(GradientBackground, {\n    colors: [\"#422443\", \"#281b34\"]\n  }), React.createElement(Screen, {\n    style: CONTAINER,\n    preset: \"fixed\",\n    backgroundColor: color.transparent\n  }, React.createElement(Header, {\n    headerTx: \"demoListScreen.title\",\n    leftIcon: \"back\",\n    onLeftPress: goBack,\n    style: HEADER,\n    titleStyle: HEADER_TITLE\n  }), React.createElement(FlatList, {\n    contentContainerStyle: FLAT_LIST,\n    data: _toConsumableArray(characters),\n    keyExtractor: function keyExtractor(item) {\n      return String(item.id);\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(View, {\n        style: LIST_CONTAINER\n      }, React.createElement(Image, {\n        source: {\n          uri: item.image\n        },\n        style: IMAGE\n      }), React.createElement(Text, {\n        style: LIST_TEXT\n      }, item.name, \" (\", item.status, \")\"));\n    }\n  })));\n});","map":{"version":3,"sources":["/Users/juanpimentel/Documents/mviewer/FrontEnd/MasonScan/app/screens/demo/demo-list-screen.tsx"],"names":["React","useEffect","observer","Header","Screen","Text","AutoImage","Image","GradientBackground","color","spacing","useStores","FULL","flex","CONTAINER","backgroundColor","transparent","HEADER","paddingBottom","paddingHorizontal","paddingTop","HEADER_TITLE","fontSize","fontWeight","letterSpacing","lineHeight","textAlign","LIST_CONTAINER","alignItems","flexDirection","padding","IMAGE","borderRadius","height","width","LIST_TEXT","marginLeft","FLAT_LIST","DemoListScreen","navigation","goBack","characterStore","characters","fetchData","getCharacters","item","String","id","uri","image","name","status"],"mappings":"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","sourcesContent":["import React, { useEffect, FC } from \"react\"\nimport { FlatList, TextStyle, View, ViewStyle, ImageStyle } from \"react-native\"\nimport { StackScreenProps } from \"@react-navigation/stack\"\nimport { observer } from \"mobx-react-lite\"\nimport { Header, Screen, Text, AutoImage as Image, GradientBackground } from \"../../components\"\nimport { color, spacing } from \"../../theme\"\nimport { useStores } from \"../../models\"\nimport { NavigatorParamList } from \"../../navigators\"\n\nconst FULL: ViewStyle = {\n  flex: 1,\n}\nconst CONTAINER: ViewStyle = {\n  backgroundColor: color.transparent,\n}\nconst HEADER: TextStyle = {\n  paddingBottom: spacing[5] - 1,\n  paddingHorizontal: spacing[4],\n  paddingTop: spacing[3],\n}\nconst HEADER_TITLE: TextStyle = {\n  fontSize: 12,\n  fontWeight: \"bold\",\n  letterSpacing: 1.5,\n  lineHeight: 15,\n  textAlign: \"center\",\n}\nconst LIST_CONTAINER: ViewStyle = {\n  alignItems: \"center\",\n  flexDirection: \"row\",\n  padding: 10,\n}\nconst IMAGE: ImageStyle = {\n  borderRadius: 35,\n  height: 65,\n  width: 65,\n}\nconst LIST_TEXT: TextStyle = {\n  marginLeft: 10,\n}\nconst FLAT_LIST: ViewStyle = {\n  paddingHorizontal: spacing[4],\n}\n\nexport const DemoListScreen: FC<StackScreenProps<NavigatorParamList, \"demoList\">> = observer(\n  ({ navigation }) => {\n    const goBack = () => navigation.goBack()\n\n    const { characterStore } = useStores()\n    const { characters } = characterStore\n\n    useEffect(() => {\n      async function fetchData() {\n        await characterStore.getCharacters()\n      }\n\n      fetchData()\n    }, [])\n\n    return (\n      <View testID=\"DemoListScreen\" style={FULL}>\n        <GradientBackground colors={[\"#422443\", \"#281b34\"]} />\n        <Screen style={CONTAINER} preset=\"fixed\" backgroundColor={color.transparent}>\n          <Header\n            headerTx=\"demoListScreen.title\"\n            leftIcon=\"back\"\n            onLeftPress={goBack}\n            style={HEADER}\n            titleStyle={HEADER_TITLE}\n          />\n          <FlatList\n            contentContainerStyle={FLAT_LIST}\n            data={[...characters]}\n            keyExtractor={(item) => String(item.id)}\n            renderItem={({ item }) => (\n              <View style={LIST_CONTAINER}>\n                <Image source={{ uri: item.image }} style={IMAGE} />\n                <Text style={LIST_TEXT}>\n                  {item.name} ({item.status})\n                </Text>\n              </View>\n            )}\n          />\n        </Screen>\n      </View>\n    )\n  },\n)\n"]},"metadata":{},"sourceType":"module"}