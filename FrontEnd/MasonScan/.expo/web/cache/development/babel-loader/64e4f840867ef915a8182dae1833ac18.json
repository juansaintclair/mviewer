{"ast":null,"code":"import i18n from \"i18n-js\";\nimport en from \"./en.json\";\nimport ja from \"./ja.json\";\nimport pt from \"./ptbr.json\";\ni18n.fallbacks = true;\ni18n.translations = {\n  pt: pt,\n  en: en,\n  ja: ja\n};\ni18n.locale = \"pt-BR\";","map":{"version":3,"sources":["/Users/juanpimentel/Documents/mviewer/FrontEnd/MasonScan/app/i18n/i18n.ts"],"names":["i18n","en","ja","pt","fallbacks","translations","locale"],"mappings":"AACA,OAAOA,IAAP,MAAiB,SAAjB;AACA,OAAOC,EAAP;AACA,OAAOC,EAAP;AACA,OAAOC,EAAP;AAEAH,IAAI,CAACI,SAAL,GAAiB,IAAjB;AACAJ,IAAI,CAACK,YAAL,GAAoB;AAAEF,EAAAA,EAAE,EAAFA,EAAF;AAAMF,EAAAA,EAAE,EAAFA,EAAN;AAAUC,EAAAA,EAAE,EAAFA;AAAV,CAApB;AAGAF,IAAI,CAACM,MAAL,GAAc,OAAd","sourcesContent":["import * as Localization from \"expo-localization\"\nimport i18n from \"i18n-js\"\nimport en from \"./en.json\"\nimport ja from \"./ja.json\"\nimport pt from \"./ptbr.json\"\n\ni18n.fallbacks = true\ni18n.translations = { pt, en, ja }\n\n// i18n.locale = Localization.locale || \"pt-BR\"\ni18n.locale = \"pt-BR\"\n\n/**\n * Builds up valid keypaths for translations.\n * Update to your default locale of choice if not English.\n */\ntype DefaultLocale = typeof pt\nexport type TxKeyPath = RecursiveKeyOf<DefaultLocale>\n\ntype RecursiveKeyOf<TObj extends Record<string, any>> = {\n  [TKey in keyof TObj & string]: TObj[TKey] extends Record<string, any>\n    ? `${TKey}` | `${TKey}.${RecursiveKeyOf<TObj[TKey]>}`\n    : `${TKey}`\n}[keyof TObj & string]\n"]},"metadata":{},"sourceType":"module"}