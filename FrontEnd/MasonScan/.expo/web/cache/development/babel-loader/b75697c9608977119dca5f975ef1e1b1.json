{"ast":null,"code":"import { types } from \"mobx-state-tree\";\nimport { CharacterStoreModel } from \"../character-store/character-store\";\nimport { BrotherStoreModel } from \"../brother-store/brother-store\";\nexport var RootStoreModel = types.model(\"RootStore\").props({\n  characterStore: types.optional(CharacterStoreModel, {}),\n  brotherStore: types.optional(BrotherStoreModel, {})\n});","map":{"version":3,"sources":["/Users/juanpimentel/Documents/mviewer/FrontEnd/MasonScan/app/models/root-store/root-store.ts"],"names":["types","CharacterStoreModel","BrotherStoreModel","RootStoreModel","model","props","characterStore","optional","brotherStore"],"mappings":"AAAA,SAAgCA,KAAhC,QAA6C,iBAA7C;AACA,SAASC,mBAAT;AACA,SAASC,iBAAT;AAMA,OAAO,IAAMC,cAAc,GAAGH,KAAK,CAACI,KAAN,CAAY,WAAZ,EAAyBC,KAAzB,CAA+B;AAC3DC,EAAAA,cAAc,EAAEN,KAAK,CAACO,QAAN,CAAeN,mBAAf,EAAoC,EAApC,CAD2C;AAE3DO,EAAAA,YAAY,EAAER,KAAK,CAACO,QAAN,CAAeL,iBAAf,EAAkC,EAAlC;AAF6C,CAA/B,CAAvB","sourcesContent":["import { Instance, SnapshotOut, types } from \"mobx-state-tree\"\nimport { CharacterStoreModel } from \"../character-store/character-store\"\nimport { BrotherStoreModel } from \"../brother-store/brother-store\"\n\n/**\n * A RootStore model.\n */\n// prettier-ignore\nexport const RootStoreModel = types.model(\"RootStore\").props({\n  characterStore: types.optional(CharacterStoreModel, {} as any),\n  brotherStore: types.optional(BrotherStoreModel, {} as any),\n})\n\n/**\n * The RootStore instance.\n */\nexport interface RootStore extends Instance<typeof RootStoreModel> {}\n\n/**\n * The data of a RootStore.\n */\nexport interface RootStoreSnapshot extends SnapshotOut<typeof RootStoreModel> {}\n"]},"metadata":{},"sourceType":"module"}