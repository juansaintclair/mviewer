{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { observer } from \"mobx-react-lite\";\nimport { Button, Header, Text, Screen, GradientBackground } from \"../../components\";\nimport { color, spacing } from \"../../theme\";\nimport { Api } from \"../../services/api\";\nimport { save, load } from \"../../utils/storage\";\nvar FULL = {\n  flex: 1\n};\nvar CONTAINER = {\n  backgroundColor: color.transparent,\n  paddingHorizontal: spacing[4]\n};\nvar DEMO = {\n  paddingVertical: spacing[4],\n  paddingHorizontal: spacing[4],\n  backgroundColor: color.palette.deepPurple\n};\nvar BOLD = {\n  fontWeight: \"bold\"\n};\n\nvar DEMO_TEXT = _objectSpread(_objectSpread({}, BOLD), {}, {\n  fontSize: 13,\n  letterSpacing: 2\n});\n\nvar HEADER = {\n  paddingTop: spacing[3],\n  paddingBottom: spacing[5] - 1,\n  paddingHorizontal: 0\n};\n\nvar HEADER_TITLE = _objectSpread(_objectSpread({}, BOLD), {}, {\n  fontSize: 12,\n  lineHeight: 15,\n  textAlign: \"center\",\n  letterSpacing: 1.5\n});\n\nvar TITLE = _objectSpread(_objectSpread({}, BOLD), {}, {\n  fontSize: 28,\n  lineHeight: 38,\n  textAlign: \"center\",\n  marginBottom: spacing[5]\n});\n\nvar TAGLINE = {\n  color: \"#BAB6C8\",\n  fontSize: 15,\n  lineHeight: 22,\n  marginBottom: spacing[4] + spacing[1]\n};\nvar HINT = {\n  color: \"#BAB6C8\",\n  fontSize: 12,\n  lineHeight: 15,\n  marginVertical: spacing[2]\n};\nvar styles = StyleSheet.create({\n  input: {\n    backgroundColor: '#FFF',\n    borderRadius: 5,\n    height: 50,\n    padding: 10,\n    marginBottom: spacing[5]\n  }\n});\nexport var VerifyScreen = observer(function (_ref) {\n  var navigation = _ref.navigation;\n\n  var goBack = function goBack() {\n    return navigation.goBack();\n  };\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      text = _React$useState2[0],\n      onChangeText = _React$useState2[1];\n\n  var verifyReactotron = React.useMemo(function () {\n    return function _callee() {\n      var verify, test;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              verify = new Api();\n              verify.setup();\n              verify.getUser(text);\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(save(\"Cool Name\", \"Boaty McBoatface\"));\n\n            case 5:\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(load(\"Cool Name\"));\n\n            case 7:\n              test = _context.sent;\n              console.log('teste storage', test);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n  }, [text]);\n  return React.createElement(View, {\n    testID: \"VerifyScreen\",\n    style: FULL\n  }, React.createElement(GradientBackground, {\n    colors: [\"#422443\", \"#281b34\"]\n  }), React.createElement(Screen, {\n    style: CONTAINER,\n    preset: \"scroll\",\n    backgroundColor: color.transparent\n  }, React.createElement(Header, {\n    headerTx: \"verifyScreen.pageTitle\",\n    leftIcon: \"back\",\n    onLeftPress: goBack,\n    style: HEADER,\n    titleStyle: HEADER_TITLE\n  }), React.createElement(Text, {\n    style: TITLE,\n    preset: \"header\",\n    tx: \"verifyScreen.title\"\n  }), React.createElement(Text, {\n    style: TAGLINE,\n    tx: \"verifyScreen.tagLine\"\n  }), React.createElement(View, null, React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: onChangeText,\n    value: text,\n    placeholder: \"Exemplo: 0233629\",\n    keyboardType: \"number-pad\"\n  })), React.createElement(View, null, React.createElement(Button, {\n    style: DEMO,\n    textStyle: DEMO_TEXT,\n    tx: \"verifyScreen.reactotron\",\n    onPress: verifyReactotron\n  }), React.createElement(Text, {\n    style: HINT,\n    tx: \"verifyScreen.\" + Platform.OS + \"ReactotronHint\"\n  }))));\n});","map":{"version":3,"sources":["/Users/juanpimentel/Documents/mviewer/FrontEnd/MasonScan/app/screens/verify/verify-screen.tsx"],"names":["React","observer","Button","Header","Text","Screen","GradientBackground","color","spacing","Api","save","load","FULL","flex","CONTAINER","backgroundColor","transparent","paddingHorizontal","DEMO","paddingVertical","palette","deepPurple","BOLD","fontWeight","DEMO_TEXT","fontSize","letterSpacing","HEADER","paddingTop","paddingBottom","HEADER_TITLE","lineHeight","textAlign","TITLE","marginBottom","TAGLINE","HINT","marginVertical","styles","StyleSheet","create","input","borderRadius","height","padding","VerifyScreen","navigation","goBack","useState","text","onChangeText","verifyReactotron","useMemo","verify","setup","getUser","test","console","log","Platform","OS"],"mappings":"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","sourcesContent":["import React, { FC } from \"react\"\nimport { Platform, TextStyle, View, ViewStyle, TextInput, StyleSheet, Alert } from \"react-native\"\nimport { StackScreenProps } from \"@react-navigation/stack\"\nimport { observer } from \"mobx-react-lite\"\nimport {\n  Button,\n  Header,\n  Text,\n  Screen,\n  GradientBackground,\n} from \"../../components\"\nimport { NavigatorParamList } from \"../../navigators\"\nimport { color, spacing } from \"../../theme\"\nimport { Api } from \"../../services/api\"\nimport { save, load } from \"../../utils/storage\"\n\nconst FULL: ViewStyle = { flex: 1 }\nconst CONTAINER: ViewStyle = {\n  backgroundColor: color.transparent,\n  paddingHorizontal: spacing[4],\n}\nconst DEMO: ViewStyle = {\n  paddingVertical: spacing[4],\n  paddingHorizontal: spacing[4],\n  backgroundColor: color.palette.deepPurple,\n}\nconst BOLD: TextStyle = { fontWeight: \"bold\" }\nconst DEMO_TEXT: TextStyle = {\n  ...BOLD,\n  fontSize: 13,\n  letterSpacing: 2,\n}\nconst HEADER: TextStyle = {\n  paddingTop: spacing[3],\n  paddingBottom: spacing[5] - 1,\n  paddingHorizontal: 0,\n}\nconst HEADER_TITLE: TextStyle = {\n  ...BOLD,\n  fontSize: 12,\n  lineHeight: 15,\n  textAlign: \"center\",\n  letterSpacing: 1.5,\n}\nconst TITLE: TextStyle = {\n  ...BOLD,\n  fontSize: 28,\n  lineHeight: 38,\n  textAlign: \"center\",\n  marginBottom: spacing[5],\n}\nconst TAGLINE: TextStyle = {\n  color: \"#BAB6C8\",\n  fontSize: 15,\n  lineHeight: 22,\n  marginBottom: spacing[4] + spacing[1],\n}\nconst HINT: TextStyle = {\n  color: \"#BAB6C8\",\n  fontSize: 12,\n  lineHeight: 15,\n  marginVertical: spacing[2],\n}\n\nconst styles = StyleSheet.create({\n  input: {\n    backgroundColor: '#FFF',\n    borderRadius: 5,\n    height: 50,\n    padding: 10,\n    marginBottom: spacing[5],\n  }\n})\n\n\nexport const VerifyScreen: FC<StackScreenProps<NavigatorParamList, \"verify\">> = observer(\n  ({ navigation }) => {\n    const goBack = () => navigation.goBack()\n    const [text, onChangeText] = React.useState('');\n\n    const verifyReactotron = React.useMemo(\n      () => async () => {   \n        // make an API call for the demo\n        // Don't do API like this, use store's API\n        const verify = new Api()\n        verify.setup()\n        verify.getUser(text)\n        // Let's do some async storage stuff\n        await save(\"Cool Name\", \"Boaty McBoatface\")\n        const test = await load(\"Cool Name\")\n        console.log('teste storage', test)\n      },\n      [text],\n    )\n\n    // const verifyBrother = () => {\n    //   Alert.alert(\"alert\", text)\n    // }\n\n    return (\n      <View testID=\"VerifyScreen\" style={FULL}>\n        <GradientBackground colors={[\"#422443\", \"#281b34\"]} />\n        <Screen style={CONTAINER} preset=\"scroll\" backgroundColor={color.transparent}>\n          <Header\n            headerTx=\"verifyScreen.pageTitle\"\n            leftIcon=\"back\"\n            onLeftPress={goBack}\n            style={HEADER}\n            titleStyle={HEADER_TITLE}\n          />\n          <Text style={TITLE} preset=\"header\" tx=\"verifyScreen.title\" />\n          <Text style={TAGLINE} tx=\"verifyScreen.tagLine\" />\n\n          <View>\n            <TextInput\n              style={styles.input}\n              onChangeText={onChangeText}\n              value={text}\n              placeholder=\"Exemplo: 0233629\"\n              keyboardType=\"number-pad\"\n            />\n          </View>\n\n          <View>\n            <Button\n              style={DEMO}\n              textStyle={DEMO_TEXT}\n              tx=\"verifyScreen.reactotron\"\n              onPress={verifyReactotron}\n            />\n            <Text style={HINT} tx={`verifyScreen.${Platform.OS}ReactotronHint` as const} />\n          </View>\n        </Screen>\n      </View>\n    )\n  },\n)\n"]},"metadata":{},"sourceType":"module"}