{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { observer } from \"mobx-react-lite\";\nimport { Header, Screen, Text, GradientBackground, AutoImage as Image } from \"../../components\";\nimport { color, spacing } from \"../../theme\";\nimport { useStores } from \"../../models\";\nvar BOLD = {\n  fontWeight: \"bold\"\n};\nvar FULL = {\n  flex: 1\n};\nvar CONTAINER = {\n  backgroundColor: color.transparent\n};\nvar HEADER = {\n  paddingBottom: spacing[5] - 1,\n  paddingHorizontal: spacing[4],\n  paddingTop: spacing[3]\n};\nvar HEADER_TITLE = {\n  fontSize: 12,\n  fontWeight: \"bold\",\n  letterSpacing: 1.5,\n  lineHeight: 15,\n  textAlign: \"center\"\n};\n\nvar TITLE = _objectSpread(_objectSpread({}, BOLD), {}, {\n  fontSize: 28,\n  lineHeight: 38,\n  textAlign: \"center\",\n  marginBottom: spacing[5]\n});\n\nvar LIST_CONTAINER = {\n  alignItems: \"center\",\n  flexDirection: \"row\",\n  padding: 10\n};\nvar IMAGE = {\n  borderRadius: 50,\n  height: 150,\n  width: 150\n};\nvar LIST_TEXT = {\n  marginLeft: 10\n};\nvar FLAT_LIST = {\n  paddingHorizontal: spacing[4]\n};\nvar LOADING_STYLE = {\n  flex: 1,\n  justifyContent: \"center\",\n  paddingVertical: spacing[6]\n};\nexport var BrotherListScreen = observer(function (_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var brotherId = route.params.brotherId;\n\n  var goBack = function goBack() {\n    return navigation.goBack();\n  };\n\n  var _useStores = useStores(),\n      brotherStore = _useStores.brotherStore;\n\n  var brothers = brotherStore.brothers;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isLoading = _React$useState2[0],\n      setIsLoading = _React$useState2[1];\n\n  console.log('brothers da brother list', brothers);\n  useEffect(function () {\n    brotherStore.clear();\n\n    function fetchData() {\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsLoading(true);\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(brotherStore.getBrother(brotherId));\n\n            case 3:\n              setIsLoading(false);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, []);\n  return React.createElement(View, {\n    testID: \"DemoListScreen\",\n    style: FULL\n  }, React.createElement(GradientBackground, {\n    colors: [\"#422443\", \"#281b34\"]\n  }), React.createElement(Screen, {\n    style: CONTAINER,\n    preset: \"fixed\",\n    backgroundColor: color.transparent\n  }, React.createElement(Header, {\n    headerTx: \"demoListScreen.title\",\n    leftIcon: \"back\",\n    onLeftPress: goBack,\n    style: HEADER,\n    titleStyle: HEADER_TITLE\n  }), React.createElement(Text, {\n    style: TITLE,\n    preset: \"header\",\n    tx: \"verifyScreen.verified\"\n  }), React.createElement(View, null, isLoading ? React.createElement(View, {\n    style: LOADING_STYLE\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"#e8e8e8\"\n  })) : React.createElement(FlatList, {\n    contentContainerStyle: FLAT_LIST,\n    data: _toConsumableArray(brothers),\n    keyExtractor: function keyExtractor(item) {\n      return String(item.cadastro);\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(React.Fragment, null, React.createElement(View, {\n        style: LIST_CONTAINER\n      }, React.createElement(Image, {\n        source: {\n          uri: item.foto\n        },\n        style: IMAGE\n      })), React.createElement(View, null, React.createElement(Text, {\n        style: LIST_TEXT\n      }, \"Cadastro: \", item.cadastro), React.createElement(Text, {\n        style: LIST_TEXT\n      }, \"Nome: \", item.nome), React.createElement(Text, {\n        style: LIST_TEXT\n      }, \"Loja: \", item.loja), React.createElement(Text, {\n        style: LIST_TEXT\n      }, \"Situa\\xE7\\xE3o: \", item.situacao)));\n    }\n  }))));\n});","map":{"version":3,"sources":["/Users/juanpimentel/Documents/mviewer/FrontEnd/MasonScan/app/screens/verify/brother-list-screen.tsx"],"names":["React","useEffect","observer","Header","Screen","Text","GradientBackground","AutoImage","Image","color","spacing","useStores","BOLD","fontWeight","FULL","flex","CONTAINER","backgroundColor","transparent","HEADER","paddingBottom","paddingHorizontal","paddingTop","HEADER_TITLE","fontSize","letterSpacing","lineHeight","textAlign","TITLE","marginBottom","LIST_CONTAINER","alignItems","flexDirection","padding","IMAGE","borderRadius","height","width","LIST_TEXT","marginLeft","FLAT_LIST","LOADING_STYLE","justifyContent","paddingVertical","BrotherListScreen","route","navigation","brotherId","params","goBack","brotherStore","brothers","useState","isLoading","setIsLoading","console","log","clear","fetchData","getBrother","item","String","cadastro","uri","foto","nome","loja","situacao"],"mappings":"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","sourcesContent":["import React, { useEffect, FC } from \"react\"\nimport { TextStyle, View, ViewStyle, FlatList, ImageStyle, ActivityIndicator } from \"react-native\"\nimport { StackScreenProps } from \"@react-navigation/stack\"\nimport { observer } from \"mobx-react-lite\"\nimport { Header, Screen, Text, GradientBackground, AutoImage as Image } from \"../../components\"\nimport { color, spacing } from \"../../theme\"\nimport { useStores } from \"../../models\"\nimport { NavigatorParamList } from \"../../navigators\"\n\nconst BOLD: TextStyle = { fontWeight: \"bold\" }\n\nconst FULL: ViewStyle = {\n  flex: 1,\n}\nconst CONTAINER: ViewStyle = {\n  backgroundColor: color.transparent,\n}\nconst HEADER: TextStyle = {\n  paddingBottom: spacing[5] - 1,\n  paddingHorizontal: spacing[4],\n  paddingTop: spacing[3],\n}\nconst HEADER_TITLE: TextStyle = {\n  fontSize: 12,\n  fontWeight: \"bold\",\n  letterSpacing: 1.5,\n  lineHeight: 15,\n  textAlign: \"center\",\n}\n\nconst TITLE: TextStyle = {\n  ...BOLD,\n  fontSize: 28,\n  lineHeight: 38,\n  textAlign: \"center\",\n  marginBottom: spacing[5],\n}\n\nconst LIST_CONTAINER: ViewStyle = {\n  alignItems: \"center\",\n  flexDirection: \"row\",\n  padding: 10,\n}\nconst IMAGE: ImageStyle = {\n  borderRadius: 50,\n  height: 150,\n  width: 150,\n}\nconst LIST_TEXT: TextStyle = {\n  marginLeft: 10,\n}\nconst FLAT_LIST: ViewStyle = {\n  paddingHorizontal: spacing[4],\n}\n\nconst LOADING_STYLE: ViewStyle = {\n  flex: 1,\n  justifyContent: \"center\",\n  paddingVertical: spacing[6]\n}\n\nexport const BrotherListScreen: FC<StackScreenProps<NavigatorParamList, \"brotherList\">> = observer(\n  ({ route, navigation }) => {\n    const { brotherId } = route.params\n    const goBack = () => navigation.goBack()\n\n    const { brotherStore } = useStores()\n    const { brothers } = brotherStore\n\n    const [isLoading, setIsLoading] = React.useState(false);\n\n    console.log('brothers da brother list', brothers)\n\n    useEffect(() => {\n      brotherStore.clear()\n      \n      async function fetchData() {\n        setIsLoading(true);\n        await brotherStore.getBrother(brotherId)\n        setIsLoading(false);\n      }\n\n      fetchData()\n    }, [])\n\n    return (\n      <View testID=\"DemoListScreen\" style={FULL}>\n        <GradientBackground colors={[\"#422443\", \"#281b34\"]} />\n        <Screen style={CONTAINER} preset=\"fixed\" backgroundColor={color.transparent}>\n          <Header\n            headerTx=\"demoListScreen.title\"\n            leftIcon=\"back\"\n            onLeftPress={goBack}\n            style={HEADER}\n            titleStyle={HEADER_TITLE}\n          />\n          <Text style={TITLE} preset=\"header\" tx=\"verifyScreen.verified\" />\n\n          <View> \n            {\n              (isLoading)\n                ?\n                <View style={LOADING_STYLE}>\n                  <ActivityIndicator size=\"large\" color=\"#e8e8e8\" />\n                </View>\n                :\n                  <FlatList\n                  contentContainerStyle={FLAT_LIST}\n                  data={[...brothers]}\n                  keyExtractor={(item) => String(item.cadastro)}\n                  renderItem={({ item }) => (\n                    <>\n                      <View style={LIST_CONTAINER}>\n                        <Image source={{ uri: item.foto }} style={IMAGE} />\n                      </View>\n                      <View>\n                        <Text style={LIST_TEXT}>\n                          Cadastro: {item.cadastro}\n                        </Text>\n                        <Text style={LIST_TEXT}>\n                          Nome: {item.nome}\n                        </Text>\n                        <Text style={LIST_TEXT}>\n                          Loja: {item.loja}\n                        </Text>\n                        <Text style={LIST_TEXT}>\n                          Situação: {item.situacao}\n                        </Text>\n                      </View>\n                    </>\n                  )}\n                />\n            } \n          </View>\n        </Screen>\n      </View>\n    )\n  },\n)\n"]},"metadata":{},"sourceType":"module"}